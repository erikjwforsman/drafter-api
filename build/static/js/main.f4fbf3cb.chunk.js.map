{"version":3,"sources":["AppStyles.module.css","graphql/queries.js","components/SubApp.js","components/SignedIn.js","components/LoginForm.js","App.js","index.js"],"names":["module","exports","LOGIN","gql","GET_ALL","SubApp","props","console","log","SignedIn","useQuery","data","error","loading","manager","logOut","mobileView","LoginForm","useState","owner","setOwner","password","setPassword","useMutation","login","result","checked","setChecked","useEffect","token","value","name","mobile","setToken","setMobileView","localStorage","setItem","submit","event","a","preventDefault","variables","onSubmit","onChange","target","type","onClick","App","client","useApolloClient","getItem","ownerH","mobileOn","backLogOut","clear","resetStore","authLink","setContext","_","headers","authorization","httpLink","HttpLink","uri","ApolloClient","cache","InMemoryCache","link","concat","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.f4fbf3cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"AppStyles_App__1aSED\",\"Flexi\":\"AppStyles_Flexi__3Vfdt\",\"FlexiContent\":\"AppStyles_FlexiContent__ZgYCP\",\"Top\":\"AppStyles_Top__MS2gt\",\"SmallScreenLeft\":\"AppStyles_SmallScreenLeft__2WQzj\",\"SmallScreen\":\"AppStyles_SmallScreen__3KQ5v\",\"BigScreen\":\"AppStyles_BigScreen__2Ovgn\",\"MobileTop\":\"AppStyles_MobileTop__3YCd8\",\"MobileView\":\"AppStyles_MobileView__380PS\",\"Mini\":\"AppStyles_Mini__1xnVW\",\"MiniQueue\":\"AppStyles_MiniQueue__3WVNk\",\"MiniDown\":\"AppStyles_MiniDown__1obLw\",\"MiniUp\":\"AppStyles_MiniUp__2xW6g\",\"NoMargin\":\"AppStyles_NoMargin__2S3q0\",\"SelfInfoRed\":\"AppStyles_SelfInfoRed__1IGTb\",\"SelfInfoOrange\":\"AppStyles_SelfInfoOrange__dDHRj\",\"SelfInfoGreen\":\"AppStyles_SelfInfoGreen__3Clhg\",\"TimerSection\":\"AppStyles_TimerSection__r8WnA\",\"Timer\":\"AppStyles_Timer__NwwKb\",\"TimerWithMargins\":\"AppStyles_TimerWithMargins__3X5f3\",\"LittlePadding\":\"AppStyles_LittlePadding__2m1Kg\",\"BackGroundGold\":\"AppStyles_BackGroundGold__2fWqM\",\"NoBorder\":\"AppStyles_NoBorder__Yi3x6\",\"TablePlayers\":\"AppStyles_TablePlayers__2saOQ\",\"TablePlayers_td\":\"AppStyles_TablePlayers_td__1R_bw\",\"TeamInfoStyle\":\"AppStyles_TeamInfoStyle__23c2H\",\"Player\":\"AppStyles_Player__2J2wn\",\"Button25\":\"AppStyles_Button25__1CwIr\",\"GoldText\":\"AppStyles_GoldText__3Hr9_\",\"PaddingLeft\":\"AppStyles_PaddingLeft__3KtBQ\",\"NoMarginOrPadding\":\"AppStyles_NoMarginOrPadding__1-LBZ\",\"Injured\":\"AppStyles_Injured__jyOXt\"};","import {gql} from \"@apollo/client\"\n\nexport const LOGIN = gql`\n    mutation login($owner: String, $password: String) {\n        login(owner: $owner, password:$password) {\n            value\n        }\n    }\n`\n\nexport const GET_TEAMS = gql`\n    query{\n        allTeams{\n            owner\n            id\n            players{\n                playerName\n                nflTeam\n                position\n                price\n                bye\n                id\n            }\n        }\n    }\n`\n\nexport const GET_PLAYERS = gql`\n    query{\n        allPlayers{\n            playerName\n            nflTeam\n            rank\n            expectedValue\n            position\n            bye\n            injury\n            id\n        }\n    }\n`\n\nexport const GET_ALL = gql`\n    query{\n        allPlayers{\n            playerName\n            nflTeam\n            rank\n            expectedValue\n            position\n            bye\n            injury\n            id\n        }\n        allSoldPlayers{\n            playerName\n            nflTeam\n            position\n            price\n            id\n            oldId\n        }\n        allTeams{\n            owner\n            id\n            place\n            salary\n            players{\n                playerName\n                nflTeam\n                position\n                price\n                bye\n                id\n            }\n        }\n        lastProposer{\n            proposer\n        }\n        currentBid{\n            bidder\n            currentPrice\n            timeLeft\n            player{\n                playerName\n                nflTeam\n                rank\n                expectedValue\n                position\n                bye\n                id\n                injury\n            }\n        }\n\n    }\n`\nexport const ADD_TEAM = gql`\n    mutation addTeam($owner:String!, $place: Int){\n        addTeam(owner:$owner, place:$place){\n            owner\n        }\n    }\n`\n\nexport const CHANGE_PROPOSER = gql`\n    mutation changeProposer{\n        changeProposer{\n            proposer\n        }\n    }\n`\n\nexport const NULL_PROPOSER = gql`\n    mutation nullProposer{\n        nullProposer{\n            true\n        }\n    }\n`\n\n//bidder tarkoitaa bidderin id:t채\nexport const CHANGE_BID = gql`\n    mutation changeBid($bidder: String!, $playerId: String!, $currentPrice:Int, $timeLeft:String){\n        changeBid(bidder:$bidder, playerId:$playerId, currentPrice:$currentPrice, timeLeft: $timeLeft){\n            currentPrice\n        }\n    }\n`\n\nexport const SELL_PLAYER = gql`\n    mutation sellPlayer($owner:String!, $playerName:String!, $nflTeam:String!, $position:String!, $price:Int!, $oldId:String!, $bye:Int!){\n        addSoldPlayer(owner: $owner, playerName: $playerName, nflTeam:$nflTeam, position:$position, price:$price, oldId:$oldId, bye:$bye){\n            playerName\n        }\n    }\n`\n\nexport const ADD_PLAYER = gql`\n    mutation addPlayer($playerName: String!, $nflTeam: String!, $rank: Int!, $expectedValue: Int!, $position: String!, $bye: Int!){\n        addPlayer(playerName:$playerName, nflTeam:$nflTeam, rank:$rank, expectedValue:$expectedValue, position:$position, bye:$bye){\n            playerName\n        }\n    }\n`\n","import React, {useState} from \"react\";\nimport SelfInfo from \"./SelfInfo\";\nimport Players from \"./Players\"\nimport AuctionComponent from \"./AuctionComponent\"\nimport Teams from \"./Teams\";\nimport {useMutation} from \"@apollo/client\";\nimport {CHANGE_PROPOSER, CHANGE_BID} from \"../graphql/queries\";\nimport {nominateButtonDisabled} from \"../utils/teamUtils\"\nimport styles from \"../AppStyles.module.css\"\nimport MobileView from \"./MobileView\"\n\nconst SubApp = (props) => {\n\n  console.log(props)\n\n  return(<div>This is SubApp</div>)\n  const [queue, setQueue] = useState([])\n  const nominatedPlayer = props.data.currentBid\n  const turn = props.data.lastProposer === null ? null : props.data.allTeams.find(t => t.place === props.data.lastProposer.proposer)                            //Noudetaan viimeinen myydyn pelaajan ehdottaja +1\n  const manager = props.data.allTeams.find(t => t.owner === props.manager) \n  const [changeTurn] = useMutation(CHANGE_PROPOSER)\n  const [changeBid] = useMutation(CHANGE_BID)\n  const [xfinalizeSaleButton, setxFinalizeSaleButton] = useState(true) //Tarkistaa, voidaanko kauppa finalisoida\n \n  const l채hetys = (boolean) => {\n    setxFinalizeSaleButton(boolean)\n  }\n\n  const start = async(value) =>{\n    //value periytyy AuctionComponentin finalizeSalesta ja kiert채채 startin varmennuksen\n    if (value===true){\n      changeTurn()\n    } else {\n      if(window.confirm(\"Eth채n painanut vahingossa?\")){\n        changeTurn()\n      }        \n    }         \n  }\n    \n  const validateManagerCanNominate = nominateButtonDisabled(nominatedPlayer, manager, turn)\n\n  //Playersin funkitiot ja propsit\n  const addPlayerToQueue = (player) => { \n    setQueue([ ...queue, player])\n  }\n\n  const callBackNominate = (player) => {\n    const firstBid = {bidder: turn.id, playerId:player.id, price:1}\n    changeBid({ variables: firstBid }) \n  }\n  //Vapaiden pelaajien erottelu\n  const mapped = props.data.allSoldPlayers.map(p=>p.oldId)\n  const availablePlayers = props.data.allPlayers.filter(p => !mapped.includes(p.id))\n  availablePlayers.sort( (p1, p2) => p1.rank - p2.rank)\n\n  const callBackRemove = (removePlayerId) => {  \n    const backer = queue.filter(p => p.id !== removePlayerId)\n    setQueue(backer)\n  }\n\n  const h = window.innerHeight;\n  const divTop = {\n      height: h*0.2,        \n      width:\"100%\",\n      overflowY: \"scroll\",\n      position:\"fixed\"\n  }\n    \n  //Poistaa jo myydyt pelaajat pelaajajonosta\n  queue.forEach(p => mapped.includes(p.id) ? callBackRemove(p.id) : console.log(\"\"))\n\n  //Mobiilin채kym채 joka on aktivoitu sis채채nkirjautuessa\n  if(props.mobileView){\n    return(<MobileView \n      logOut={props.logOut} nominatedPlayer={nominatedPlayer} playerQueue={queue} autoPick={availablePlayers[0]} \n      turn={turn} callBackRemove={callBackRemove} teams={props.data.allTeams} manager={manager} start={start} l채hetys={l채hetys} \n      availablePlayers={availablePlayers} addPlayer={addPlayerToQueue} nominate={callBackNominate} validateManagerCanNominate={validateManagerCanNominate} \n      player={availablePlayers[0]} xfinalizeSaleButton={xfinalizeSaleButton}\n    />)\n  }\n\n  //Normin채kym채\n  return (\n    <div className=\"App\">\n      <div style={divTop}>\n        <AuctionComponent logOut={props.logOut} nominatedPlayer={nominatedPlayer} playerQueue={queue} autoPick={availablePlayers[0]} turn={turn} callBackRemove={callBackRemove} teams={props.data.allTeams} manager={manager} start={start} l채hetys={l채hetys} />\n      </div>\n      <div className={styles.FlexiContent}>\n        <Players availablePlayers={availablePlayers} addPlayer={addPlayerToQueue} nominate={callBackNominate} validateManagerCanNominate={validateManagerCanNominate}/>\n        <SelfInfo start={start} nominatedPlayer={nominatedPlayer} turn={turn} player={availablePlayers[0]} nominate={callBackNominate} manager={manager} playerQueue={queue} callBackRemove={callBackRemove} xfinalizeSaleButton={xfinalizeSaleButton} teams={props.data.allTeams}/>\n        <Teams teams={props.data.allTeams} manager={manager}/>\n      </div>          \n    </div>\n  );\n}\n\nexport default SubApp;","import React from \"react\"\nimport {useQuery} from \"@apollo/client\";\nimport {GET_ALL} from \"../graphql/queries\";\nimport SubApp from \"./SubApp\";\n\nconst SignedIn = (props) => {\n    //return(<div>WIP</div>)\n  const {data, error, loading} = useQuery(GET_ALL)//, {\n  //   pollInterval: 1000\n  // })\n//   console.log(data)\n  if (loading ){\n    return <div>loading...</div>\n  }  \n  if (error){\n    console.log(error)\n  }\n\n  return(<SubApp data={data} manager={props.manager} logOut={props.logOut} mobileView={props.mobileView}/>)\n}\n\nexport default SignedIn","import React, {useState, useEffect} from \"react\"\nimport {useMutation} from \"@apollo/client\"\nimport {LOGIN} from \"../graphql/queries\"\n\nconst LoginForm = (props) => {\n    const [owner, setOwner] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [login, result] = useMutation(LOGIN)\n    const [checked, setChecked] = useState(false)\n\n    console.log(\"owner\", owner)\n\n    useEffect( () => {\n        console.log(\"eseE Login t채ss채\")\n        props.logOut()\n        if(result.data){\n            const token = result.data.login.value\n            console.log(token)\n            const name = owner\n            const mobile = checked\n            props.setToken(token)\n            props.setOwner(name)   \n            props.setMobileView(mobile)\n            \n            localStorage.setItem(\"manager-token\", token)\n            localStorage.setItem(\"owner\", name)\n            localStorage.setItem(\"mobile\", checked)   \n        }\n    }, [result.data])// eslint-disable-line\n\n    const handleClick = () => setChecked(!checked)\n\n    const submit = async(event) => {\n        event.preventDefault()\n        await login({ variables: { owner, password } })\n    }\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div>\n                    manager <input\n                        value={owner}\n                        onChange={ ({target}) => setOwner(target.value) }\n                    />\n                </div>\n                <div>\n                    password <input \n                        \n                        value={password}\n                        onChange= { ({target}) => setPassword(target.value)}\n                        />\n                </div>\n                <div>\n                    mobile <input \n                        type=\"checkbox\" onClick={handleClick} />\n                </div>\n                <button type=\"submit\">\n                    login\n                </button>\n            </form>\n        </div>\n    )\n}\nexport default LoginForm;","import React, {useEffect, useState} from \"react\"\nimport {useApolloClient} from \"@apollo/client\";\nimport SignedIn from \"./components/SignedIn\";\nimport LoginForm from \"./components/LoginForm\"\n\nconst App = () => {\n  const [token, setToken] = useState(null)\n  const [manager, setOwner] = useState(\"\")\n  const [mobileView, setMobileView] = useState(false)\n  const client = useApolloClient()\n  console.log(\"Aloitetaan\") \n\n  useEffect( () => {\n    console.log(\"eseE App t채ss채\")\n\n    const token = localStorage.getItem(\"manager-token\")\n    const ownerH = localStorage.getItem(\"owner\")\n    const mobileOn = localStorage.getItem(\"mobile\")\n\n    if(token) {\n      setToken(token)\n    }\n\n    if(ownerH) {\n      setOwner(ownerH)\n    }\n\n    if(mobileOn===true) {\n      setMobileView(mobileOn)\n    }\n  }, [])\n  \n  const logOut = () => {\n    setToken(null)\n    setOwner(null)\n    localStorage.clear()\n    client.resetStore()\n  }\n  const backLogOut = () => {\n    logOut()\n  }\n  if (!token | !manager) {\n    return (<LoginForm setToken={setToken} setOwner={setOwner} setMobileView={setMobileView} logOut={backLogOut} />)\n  }\n  //console.log(data)\n  return(<SignedIn manager={manager} logOut={backLogOut} mobileView={mobileView} />)\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { ApolloClient, ApolloProvider, HttpLink, InMemoryCache } from '@apollo/client'\n\n// const client = new ApolloClient({\n//   cache: new InMemoryCache(),\n//   link: new HttpLink({\n//     uri: \"http://localhost:4000\"\n//   })\n// })\n\nimport { setContext } from 'apollo-link-context'\nconsole.log(\"Index\")\nconst authLink = setContext((_, {headers}) => {\n  const token = localStorage.getItem(\"manager-token\")\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token}` :null,\n    }\n  }\n})\n\nconst httpLink = new HttpLink({ uri: 'http://localhost:4000/' })\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: authLink.concat(httpLink)\n})\n\nReactDOM.render(\n  <ApolloProvider client = {client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}